{"version":3,"sources":["Components/Nav/Nav.js","Components/Wrapper/Wrapper.js","Components/Form/Form.js","Components/Checkbox/Checkbox.js","Components/DeleteBtn/DeleteBtn.js","Components/HoursForm/HoursForm.js","Pages/Chart/Chart.js","Pages/Splash/Splash.js","Pages/Graph/Graph.js","Components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","href","Wrapper","props","children","Form","type","placeholder","name","value","onChange","required","onClick","submit","Checkbox","day","defaultChecked","dbChecked","checked","DeleteBtn","HoursForm","taskName","id","event","hoursChange","hours","size","Chart","_useState","useState","_useState2","Object","slicedToArray","setTaskName","_useState3","_useState4","data","setData","_useState5","_useState6","setHours","handleHoursChange","taskNameId","_event$target","target","submitHours","input","options","method","headers","Content-Type","body","JSON","stringify","fetch","concat","then","res","json","fetchData","console","log","catch","err","updateTask","defineProperty","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","sent","stop","apply","this","arguments","useEffect","Components_Form_Form","preventDefault","inputs","toConsumableArray","map","item","key","_id","Components_Checkbox_Checkbox","monday","tuesday","wednesday","thursday","friday","saturday","sunday","Components_DeleteBtn_DeleteBtn","undefined","Components_HoursForm_HoursForm","Splash","Graph","victory_chart","domainPadding","style","parent","maxWidth","maxHeight","victory_axis","tickValues","dependentAxis","tickFormat","t","Math","round","victory_bar","task","timesCompleted","x","y","Footer","App","react_router_dom","Components_Nav_Nav","Components_Wrapper_Wrapper","react_router","exact","path","component","Components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3190ffd4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./NavStyle.css\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <nav>\r\n        <p className=\"title\">\r\n          Behavior Tracker<span> &#x2611;</span>\r\n        </p>\r\n        <a className=\"link-item\" href=\"/charts\">\r\n          Charts\r\n        </a>\r\n        <p className=\"line\"> | </p>\r\n        <a className=\"link-item\" href=\"/graphs\">\r\n          Graphs\r\n        </a>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./wrapper.css\";\r\n\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./form.css\";\r\n\r\nconst Form = (props) => {\r\n\r\n\r\n    return (\r\n      <form className=\"taskForm\">\r\n      <label>Task Entry</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a new task\"\r\n          name=\"taskName\"\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n          required\r\n        />\r\n        <button type=\"submit\" onClick={props.submit}>\r\n          &#43;\r\n        </button>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Checkbox = props => {\r\n  return (\r\n    <div>\r\n      <input\r\n        name={props.day}\r\n        defaultChecked={props.dbChecked}\r\n        onChange={props.onChange}\r\n        type=\"checkbox\"\r\n        checked={props.checked}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from \"react\";\r\n\r\nconst DeleteBtn = props => {\r\n  return (\r\n    <div>\r\n      <button {...props}>✗</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteBtn;\r\n","import React from \"react\";\r\nimport \"./hoursForm.css\";\r\n\r\nconst HoursForm = props => {\r\n    return (\r\n      <div className=\"hoursForm\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Approximate hours this week\"\r\n          name={props.taskName + props.id}\r\n          onChange={event => props.hoursChange(event, props.taskName + props.id)}\r\n          value={props.hours}\r\n          size=\"28\"\r\n          required\r\n        />\r\n        <button type=\"submit\" onClick={() => props.submit(props.id)}>\r\n          Add hours\r\n        </button>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default HoursForm;","import React, { useState, useEffect } from \"react\";\r\nimport Form from \"../../Components/Form/Form\";\r\nimport Checkbox from \"../../Components/Checkbox/Checkbox\";\r\nimport DeleteBtn from \"../../Components/DeleteBtn/DeleteBtn\";\r\nimport HoursForm from \"../../Components/HoursForm/HoursForm\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = function Chart() {\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [hours, setHours] = useState(\"\");\r\n\r\n  //-------------FORM HANDLING -----------------\r\n  //getting input from task form\r\n  const onChange = event => {\r\n    const { value } = event.target;\r\n    setTaskName(value);\r\n    };\r\n  \r\n\r\n  const handleHoursChange = (event, taskNameId) => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case taskNameId:\r\n        setHours(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  //----------------------------------------\r\n\r\n  //--------------FETCH CALLS --------------\r\n  //submit a new task\r\n  const handleTaskSubmit = event => {\r\n    event.preventDefault();\r\n    const inputs = { taskName: taskName };\r\n    const options = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(inputs)\r\n    };\r\n    fetch(\"/api/data\", options)\r\n      .then(res =>\r\n        res\r\n          .json()\r\n          .then(res => setData([...data, res]))\r\n          .then(res => console.log(res))\r\n      )\r\n      .catch(err => {\r\n        console.log(\"request failed\" + err);\r\n      });\r\n      setTaskName(\"\");\r\n  };\r\n\r\n  //submit hours\r\n  const submitHours = id => {\r\n    const input = {\r\n      hours: hours\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(input)\r\n    };\r\n    fetch(`/api/data/${id}`, options)\r\n      .then(res =>\r\n        res\r\n          .json()\r\n          .then(fetchData(data))\r\n          .then(res => console.log(res))\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  //get hours\r\n  const getHours = id => {\r\n    fetch(`/api/data/${id}`)\r\n      .then(res => res.json())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  //update a task with boolean value from input select\r\n  const updateTask = (id, day, value) => {\r\n    const input = {\r\n      [day]: value\r\n    };\r\n    const options = {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(input)\r\n    };\r\n    fetch(`/api/data/${id}`, options)\r\n      .then(res =>\r\n        res\r\n          .json()\r\n          .then(fetchData(data))\r\n          .then(res => console.log(res))\r\n      )\r\n      .catch(err => {\r\n        console.log(\"request failed\" + err);\r\n      });\r\n  };\r\n\r\n  //delete a particular task\r\n  const deleteTask = id => {\r\n    const options = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    fetch(\"/api/data/\" + id, options)\r\n      .then(res =>\r\n        res\r\n          .json()\r\n          .then(fetchData(data))\r\n          .then(res => console.log(res))\r\n      )\r\n      .catch(err => {\r\n        console.log(\"request failed\" + err);\r\n      });\r\n  };\r\n  //-----------------------------------------------------\r\n\r\n  //-------------useEffect Global data set----------------\r\n  //pulls any data from the DB and places it in state.\r\n  //be sure to keep the dependency array to avoid the infinite call\r\n  \r\n  const fetchData = async () => {\r\n    const response = await fetch(`/api/data`);\r\n    const json = await response.json();\r\n    setData(json);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(data);\r\n  }, []);\r\n\r\n  //--------------------------------------------------------\r\n\r\n  //-----------Post all data to pastTask, clear all current week ----------\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"behvChart\">\r\n      <Form onChange={onChange} submit={handleTaskSubmit} value={taskName} />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th />\r\n            <th>Monday</th>\r\n            <th>Tuesday</th>\r\n            <th>Wednesday</th>\r\n            <th>Thursday</th>\r\n            <th>Friday</th>\r\n            <th>Saturday</th>\r\n            <th>Sunday</th>\r\n            <th>Hours</th>\r\n          </tr>\r\n        </thead>\r\n        {data.map(item => (\r\n          <tbody key={item._id}>\r\n            <tr>\r\n              <th>{item.taskName}</th>\r\n              <td className=\"monday\">\r\n                <Checkbox\r\n                  onChange={() =>\r\n                    updateTask(item._id, \"monday\", !item.monday)\r\n                  }\r\n                  dbChecked={item.monday}\r\n                  day=\"monday\"\r\n                  taskName={item.taskName}\r\n                  id={item._id}\r\n                  submit={submitHours}\r\n                />\r\n              </td>\r\n              <td className=\"tuesday\">\r\n                <Checkbox\r\n                  dbChecked={item.tuesday}\r\n                  onChange={() =>\r\n                    updateTask(item._id, \"tuesday\", !item.tuesday)\r\n                  }\r\n                  taskName={item.taskName}\r\n                  id={item._id}\r\n                  day=\"tuesday\"\r\n                />\r\n              </td>\r\n              <td className=\"wednesday\">\r\n                <Checkbox\r\n                  dbChecked={item.wednesday}\r\n                  onChange={() =>\r\n                    updateTask(item._id, \"wednesday\", !item.wednesday)\r\n                  }\r\n                  taskName={item.taskName}\r\n                  id={item._id}\r\n                  day=\"wednesday\"\r\n                />\r\n              </td>\r\n              <td className=\"thursday\">\r\n                <Checkbox\r\n                  dbChecked={item.thursday}\r\n                  onChange={() =>\r\n                    updateTask(item._id, \"thursday\", !item.thursday)\r\n                  }\r\n                  taskName={item.taskName}\r\n                  id={item._id}\r\n                  day=\"thursday\"\r\n                />\r\n              </td>\r\n              <td className=\"friday\">\r\n                <Checkbox\r\n                  dbChecked={item.friday}\r\n                  onChange={() =>\r\n                    updateTask(item._id, \"friday\", !item.friday)\r\n                  }\r\n                  taskName={item.taskName}\r\n                  id={item._id}\r\n                  day=\"friday\"\r\n                />\r\n              </td>\r\n              <td className=\"saturday\">\r\n                <Checkbox\r\n                  dbChecked={item.saturday}\r\n                  onChange={() =>\r\n                    updateTask(item._id, \"saturday\", !item.saturday)\r\n                  }\r\n                  taskName={item.taskName}\r\n                  id={item._id}\r\n                  day=\"saturday\"\r\n                />\r\n              </td>\r\n              <td className=\"sunday\">\r\n                <Checkbox\r\n                  dbChecked={item.sunday}\r\n                  onChange={() =>\r\n                    updateTask(item._id, \"sunday\", !item.sunday)\r\n                  }\r\n                  taskName={item.taskName}\r\n                  id={item._id}\r\n                  day=\"sunday\"\r\n                />\r\n              </td>\r\n              <DeleteBtn onClick={() => deleteTask(item._id)} />\r\n              {item.hours === undefined ? <HoursForm\r\n                hoursChange={handleHoursChange}\r\n                submit={submitHours}\r\n                id={item._id}\r\n                taskName={item.taskName}\r\n              /> : <p>{item.hours.hours} hours logged this week</p>}\r\n            </tr>\r\n          </tbody>\r\n        ))}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport \"./splash.css\";\r\n\r\nconst Splash = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <h4>Welcome to Behavior Tracker!</h4>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Splash;","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Graph.css\";\r\n\r\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from \"victory\";\r\n\r\nconst Graph = function Graph() {\r\n  const [data, setData] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    const response = await fetch(`/api/data`);\r\n    const json = await response.json();\r\n    setData(json);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(data);\r\n  }, []);\r\n\r\n  const dummyData = [\r\n    { task: \"Practice React\", timesCompleted: 2 },\r\n    { task: \"Clean Litterbox\", timesCompleted: 4 }\r\n  ];\r\n  \r\n\r\n  return (\r\n    <div className=\"chart\">\r\n    <h3>This is a static chart, dynamic charts coming soon...</h3>\r\n      <VictoryChart\r\n        domainPadding={50}\r\n        style={{ parent: { maxWidth: \"50%\", maxHeight: \"50%\" } }}\r\n      >\r\n        <VictoryAxis tickValues={[\"Practice React\", \"Clean Litterbox\"]}/>\r\n        <VictoryAxis dependentAxis tickValues={[2,4]} tickFormat={t => `${Math.round(t)} days`} />\r\n        <VictoryBar data={dummyData} x={\"task\"} y={\"timesCompleted\"} />\r\n      </VictoryChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import React from \"react\";\r\nimport \"./footer.css\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n      <footer>\r\n        <p>\r\n          <span>&#9774;</span>gregory rutherford\r\n        </p>\r\n      </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Nav from \"./Components/Nav/Nav\";\r\nimport Wrapper from \"./Components/Wrapper/Wrapper\";\r\nimport Chart from \"./Pages/Chart/Chart\";\r\nimport Splash from \"./Pages/Splash/Splash\";\r\nimport Graph from \"./Pages/Graph/Graph\";\r\nimport Footer from \"./Components/Footer/Footer\";\r\nimport {BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"page\">\r\n        <Nav />\r\n        <Wrapper>\r\n          <Route exact path=\"/\" component={Splash} />\r\n          <Route exact path=\"/charts\" component={Chart} />\r\n          <Route exact path=\"/graphs\" component={Graph} />\r\n          <Footer />\r\n        </Wrapper>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}